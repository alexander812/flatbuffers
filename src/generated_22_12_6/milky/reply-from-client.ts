// automatically generated by the FlatBuffers compiler, do not modify

import { Reply, ReplyT } from '../milky/common/reply.js';
import { ClientReply, ClientReplyT } from '../milky/resources/client-reply.js';


export enum ReplyFromClient {
  NONE = 0,
  common_Reply = 1,
  resources_ClientReply = 2
}

export function unionToReplyFromClient(
  type: ReplyFromClient,
  accessor: (obj:ClientReply|Reply) => ClientReply|Reply|null
): ClientReply|Reply|null {
  switch(ReplyFromClient[type]) {
    case 'NONE': return null; 
    case 'common_Reply': return accessor(new Reply())! as Reply;
    case 'resources_ClientReply': return accessor(new ClientReply())! as ClientReply;
    default: return null;
  }
}

export function unionListToReplyFromClient(
  type: ReplyFromClient, 
  accessor: (index: number, obj:ClientReply|Reply) => ClientReply|Reply|null, 
  index: number
): ClientReply|Reply|null {
  switch(ReplyFromClient[type]) {
    case 'NONE': return null; 
    case 'common_Reply': return accessor(index, new Reply())! as Reply;
    case 'resources_ClientReply': return accessor(index, new ClientReply())! as ClientReply;
    default: return null;
  }
}
