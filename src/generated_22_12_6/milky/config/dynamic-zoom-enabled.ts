// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class DynamicZoomEnabled implements flatbuffers.IUnpackableObject<DynamicZoomEnabledT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DynamicZoomEnabled {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDynamicZoomEnabled(bb:flatbuffers.ByteBuffer, obj?:DynamicZoomEnabled):DynamicZoomEnabled {
  return (obj || new DynamicZoomEnabled()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDynamicZoomEnabled(bb:flatbuffers.ByteBuffer, obj?:DynamicZoomEnabled):DynamicZoomEnabled {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DynamicZoomEnabled()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enable():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startDynamicZoomEnabled(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addEnable(builder:flatbuffers.Builder, enable:boolean) {
  builder.addFieldInt8(0, +enable, +false);
}

static endDynamicZoomEnabled(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDynamicZoomEnabled(builder:flatbuffers.Builder, enable:boolean):flatbuffers.Offset {
  DynamicZoomEnabled.startDynamicZoomEnabled(builder);
  DynamicZoomEnabled.addEnable(builder, enable);
  return DynamicZoomEnabled.endDynamicZoomEnabled(builder);
}

unpack(): DynamicZoomEnabledT {
  return new DynamicZoomEnabledT(
    this.enable()
  );
}


unpackTo(_o: DynamicZoomEnabledT): void {
  _o.enable = this.enable();
}
}

export class DynamicZoomEnabledT implements flatbuffers.IGeneratedObject {
constructor(
  public enable: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return DynamicZoomEnabled.createDynamicZoomEnabled(builder,
    this.enable
  );
}
}
