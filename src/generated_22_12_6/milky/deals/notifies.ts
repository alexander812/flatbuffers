// automatically generated by the FlatBuffers compiler, do not modify

import { NotifyCancelOrder, NotifyCancelOrderT } from '../../milky/deals/notify-cancel-order.js';
import { NotifyQuickSaleDeal, NotifyQuickSaleDealT } from '../../milky/deals/notify-quick-sale-deal.js';
import { NotifySelectDeal, NotifySelectDealT } from '../../milky/deals/notify-select-deal.js';
import { NotifySelectOrder, NotifySelectOrderT } from '../../milky/deals/notify-select-order.js';
import { NotifyUnselectDeal, NotifyUnselectDealT } from '../../milky/deals/notify-unselect-deal.js';
import { NotifyUnselectOrder, NotifyUnselectOrderT } from '../../milky/deals/notify-unselect-order.js';


export enum Notifies {
  NONE = 0,
  NotifySelectDeal = 1,
  NotifyUnselectDeal = 2,
  NotifyQuickSaleDeal = 3,
  NotifySelectOrder = 4,
  NotifyUnselectOrder = 5,
  NotifyCancelOrder = 6
}

export function unionToNotifies(
  type: Notifies,
  accessor: (obj:NotifyCancelOrder|NotifyQuickSaleDeal|NotifySelectDeal|NotifySelectOrder|NotifyUnselectDeal|NotifyUnselectOrder) => NotifyCancelOrder|NotifyQuickSaleDeal|NotifySelectDeal|NotifySelectOrder|NotifyUnselectDeal|NotifyUnselectOrder|null
): NotifyCancelOrder|NotifyQuickSaleDeal|NotifySelectDeal|NotifySelectOrder|NotifyUnselectDeal|NotifyUnselectOrder|null {
  switch(Notifies[type]) {
    case 'NONE': return null; 
    case 'NotifySelectDeal': return accessor(new NotifySelectDeal())! as NotifySelectDeal;
    case 'NotifyUnselectDeal': return accessor(new NotifyUnselectDeal())! as NotifyUnselectDeal;
    case 'NotifyQuickSaleDeal': return accessor(new NotifyQuickSaleDeal())! as NotifyQuickSaleDeal;
    case 'NotifySelectOrder': return accessor(new NotifySelectOrder())! as NotifySelectOrder;
    case 'NotifyUnselectOrder': return accessor(new NotifyUnselectOrder())! as NotifyUnselectOrder;
    case 'NotifyCancelOrder': return accessor(new NotifyCancelOrder())! as NotifyCancelOrder;
    default: return null;
  }
}

export function unionListToNotifies(
  type: Notifies, 
  accessor: (index: number, obj:NotifyCancelOrder|NotifyQuickSaleDeal|NotifySelectDeal|NotifySelectOrder|NotifyUnselectDeal|NotifyUnselectOrder) => NotifyCancelOrder|NotifyQuickSaleDeal|NotifySelectDeal|NotifySelectOrder|NotifyUnselectDeal|NotifyUnselectOrder|null, 
  index: number
): NotifyCancelOrder|NotifyQuickSaleDeal|NotifySelectDeal|NotifySelectOrder|NotifyUnselectDeal|NotifyUnselectOrder|null {
  switch(Notifies[type]) {
    case 'NONE': return null; 
    case 'NotifySelectDeal': return accessor(index, new NotifySelectDeal())! as NotifySelectDeal;
    case 'NotifyUnselectDeal': return accessor(index, new NotifyUnselectDeal())! as NotifyUnselectDeal;
    case 'NotifyQuickSaleDeal': return accessor(index, new NotifyQuickSaleDeal())! as NotifyQuickSaleDeal;
    case 'NotifySelectOrder': return accessor(index, new NotifySelectOrder())! as NotifySelectOrder;
    case 'NotifyUnselectOrder': return accessor(index, new NotifyUnselectOrder())! as NotifyUnselectOrder;
    case 'NotifyCancelOrder': return accessor(index, new NotifyCancelOrder())! as NotifyCancelOrder;
    default: return null;
  }
}
