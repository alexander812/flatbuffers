// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { DrawingModel2, DrawingModel2T } from '../../milky/drawing/drawing-model2.js';


export class EditedDrawingNotify2 implements flatbuffers.IUnpackableObject<EditedDrawingNotify2T> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EditedDrawingNotify2 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEditedDrawingNotify2(bb:flatbuffers.ByteBuffer, obj?:EditedDrawingNotify2):EditedDrawingNotify2 {
  return (obj || new EditedDrawingNotify2()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEditedDrawingNotify2(bb:flatbuffers.ByteBuffer, obj?:EditedDrawingNotify2):EditedDrawingNotify2 {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EditedDrawingNotify2()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

model(obj?:DrawingModel2):DrawingModel2|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DrawingModel2()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startEditedDrawingNotify2(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addModel(builder:flatbuffers.Builder, modelOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, modelOffset, 0);
}

static endEditedDrawingNotify2(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // model
  return offset;
}

static createEditedDrawingNotify2(builder:flatbuffers.Builder, modelOffset:flatbuffers.Offset):flatbuffers.Offset {
  EditedDrawingNotify2.startEditedDrawingNotify2(builder);
  EditedDrawingNotify2.addModel(builder, modelOffset);
  return EditedDrawingNotify2.endEditedDrawingNotify2(builder);
}

unpack(): EditedDrawingNotify2T {
  return new EditedDrawingNotify2T(
    (this.model() !== null ? this.model()!.unpack() : null)
  );
}


unpackTo(_o: EditedDrawingNotify2T): void {
  _o.model = (this.model() !== null ? this.model()!.unpack() : null);
}
}

export class EditedDrawingNotify2T implements flatbuffers.IGeneratedObject {
constructor(
  public model: DrawingModel2T|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const model = (this.model !== null ? this.model!.pack(builder) : 0);

  return EditedDrawingNotify2.createEditedDrawingNotify2(builder,
    model
  );
}
}
