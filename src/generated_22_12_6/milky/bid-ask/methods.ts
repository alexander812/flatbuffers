// automatically generated by the FlatBuffers compiler, do not modify

import { SetAsk, SetAskT } from '../../milky/bid-ask/set-ask.js';
import { SetBid, SetBidT } from '../../milky/bid-ask/set-bid.js';
import { SetEnabled, SetEnabledT } from '../../milky/bid-ask/set-enabled.js';


export enum Methods {
  NONE = 0,
  SetBid = 1,
  SetAsk = 2,
  SetEnabled = 3
}

export function unionToMethods(
  type: Methods,
  accessor: (obj:SetAsk|SetBid|SetEnabled) => SetAsk|SetBid|SetEnabled|null
): SetAsk|SetBid|SetEnabled|null {
  switch(Methods[type]) {
    case 'NONE': return null; 
    case 'SetBid': return accessor(new SetBid())! as SetBid;
    case 'SetAsk': return accessor(new SetAsk())! as SetAsk;
    case 'SetEnabled': return accessor(new SetEnabled())! as SetEnabled;
    default: return null;
  }
}

export function unionListToMethods(
  type: Methods, 
  accessor: (index: number, obj:SetAsk|SetBid|SetEnabled) => SetAsk|SetBid|SetEnabled|null, 
  index: number
): SetAsk|SetBid|SetEnabled|null {
  switch(Methods[type]) {
    case 'NONE': return null; 
    case 'SetBid': return accessor(index, new SetBid())! as SetBid;
    case 'SetAsk': return accessor(index, new SetAsk())! as SetAsk;
    case 'SetEnabled': return accessor(index, new SetEnabled())! as SetEnabled;
    default: return null;
  }
}
