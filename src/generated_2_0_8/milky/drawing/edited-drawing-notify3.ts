// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { DrawingModel3, DrawingModel3T } from '../../milky/drawing/drawing-model3';


export class EditedDrawingNotify3 {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EditedDrawingNotify3 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEditedDrawingNotify3(bb:flatbuffers.ByteBuffer, obj?:EditedDrawingNotify3):EditedDrawingNotify3 {
  return (obj || new EditedDrawingNotify3()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEditedDrawingNotify3(bb:flatbuffers.ByteBuffer, obj?:EditedDrawingNotify3):EditedDrawingNotify3 {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EditedDrawingNotify3()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

model(obj?:DrawingModel3):DrawingModel3|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DrawingModel3()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startEditedDrawingNotify3(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addModel(builder:flatbuffers.Builder, modelOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, modelOffset, 0);
}

static endEditedDrawingNotify3(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // model
  return offset;
}

static createEditedDrawingNotify3(builder:flatbuffers.Builder, modelOffset:flatbuffers.Offset):flatbuffers.Offset {
  EditedDrawingNotify3.startEditedDrawingNotify3(builder);
  EditedDrawingNotify3.addModel(builder, modelOffset);
  return EditedDrawingNotify3.endEditedDrawingNotify3(builder);
}

unpack(): EditedDrawingNotify3T {
  return new EditedDrawingNotify3T(
    (this.model() !== null ? this.model()!.unpack() : null)
  );
}


unpackTo(_o: EditedDrawingNotify3T): void {
  _o.model = (this.model() !== null ? this.model()!.unpack() : null);
}
}

export class EditedDrawingNotify3T {
constructor(
  public model: DrawingModel3T|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const model = (this.model !== null ? this.model!.pack(builder) : 0);

  return EditedDrawingNotify3.createEditedDrawingNotify3(builder,
    model
  );
}
}
