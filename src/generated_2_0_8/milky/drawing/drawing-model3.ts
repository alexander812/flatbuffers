// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class DrawingModel3 {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DrawingModel3 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDrawingModel3(bb:flatbuffers.ByteBuffer, obj?:DrawingModel3):DrawingModel3 {
  return (obj || new DrawingModel3()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDrawingModel3(bb:flatbuffers.ByteBuffer, obj?:DrawingModel3):DrawingModel3 {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DrawingModel3()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

qwe1():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

qwe2():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

qwe3():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startDrawingModel3(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addQwe1(builder:flatbuffers.Builder, qwe1:number) {
  builder.addFieldInt32(0, qwe1, 0);
}

static addQwe2(builder:flatbuffers.Builder, qwe2:number) {
  builder.addFieldInt32(1, qwe2, 0);
}

static addQwe3(builder:flatbuffers.Builder, qwe3:number) {
  builder.addFieldInt32(2, qwe3, 0);
}

static endDrawingModel3(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDrawingModel3(builder:flatbuffers.Builder, qwe1:number, qwe2:number, qwe3:number):flatbuffers.Offset {
  DrawingModel3.startDrawingModel3(builder);
  DrawingModel3.addQwe1(builder, qwe1);
  DrawingModel3.addQwe2(builder, qwe2);
  DrawingModel3.addQwe3(builder, qwe3);
  return DrawingModel3.endDrawingModel3(builder);
}

unpack(): DrawingModel3T {
  return new DrawingModel3T(
    this.qwe1(),
    this.qwe2(),
    this.qwe3()
  );
}


unpackTo(_o: DrawingModel3T): void {
  _o.qwe1 = this.qwe1();
  _o.qwe2 = this.qwe2();
  _o.qwe3 = this.qwe3();
}
}

export class DrawingModel3T {
constructor(
  public qwe1: number = 0,
  public qwe2: number = 0,
  public qwe3: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return DrawingModel3.createDrawingModel3(builder,
    this.qwe1,
    this.qwe2,
    this.qwe3
  );
}
}
