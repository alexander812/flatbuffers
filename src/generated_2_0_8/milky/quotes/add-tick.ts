// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Tick, TickT } from '../../milky/model/quotes/tick';


export class AddTick {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AddTick {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAddTick(bb:flatbuffers.ByteBuffer, obj?:AddTick):AddTick {
  return (obj || new AddTick()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAddTick(bb:flatbuffers.ByteBuffer, obj?:AddTick):AddTick {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AddTick()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

tick(obj?:Tick):Tick|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Tick()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startAddTick(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTick(builder:flatbuffers.Builder, tickOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, tickOffset, 0);
}

static endAddTick(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // tick
  return offset;
}

static createAddTick(builder:flatbuffers.Builder, tickOffset:flatbuffers.Offset):flatbuffers.Offset {
  AddTick.startAddTick(builder);
  AddTick.addTick(builder, tickOffset);
  return AddTick.endAddTick(builder);
}

unpack(): AddTickT {
  return new AddTickT(
    (this.tick() !== null ? this.tick()!.unpack() : null)
  );
}


unpackTo(_o: AddTickT): void {
  _o.tick = (this.tick() !== null ? this.tick()!.unpack() : null);
}
}

export class AddTickT {
constructor(
  public tick: TickT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const tick = (this.tick !== null ? this.tick!.pack(builder) : 0);

  return AddTick.createAddTick(builder,
    tick
  );
}
}
