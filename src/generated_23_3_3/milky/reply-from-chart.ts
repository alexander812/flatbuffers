// automatically generated by the FlatBuffers compiler, do not modify

import { Reply, ReplyT } from '../milky/common/reply.js';
import { Reply as milky_deals_Reply, ReplyT as milky_deals_ReplyT } from '../milky/deals/reply.js';
import { ActiveIndicatorsIdsReply, ActiveIndicatorsIdsReplyT } from '../milky/indicator/active-indicators-ids-reply.js';
import { Reply as milky_layout_Reply, ReplyT as milky_layout_ReplyT } from '../milky/layout/reply.js';
import { Reply as milky_quotes_Reply, ReplyT as milky_quotes_ReplyT } from '../milky/quotes/reply.js';
import { Reply as milky_strikes_Reply, ReplyT as milky_strikes_ReplyT } from '../milky/strikes/reply.js';
import { Reply as milky_version_Reply, ReplyT as milky_version_ReplyT } from '../milky/version/reply.js';


export enum ReplyFromChart {
  NONE = 0,
  common_Reply = 1,
  version_Reply = 2,
  indicator_ActiveIndicatorsIdsReply = 3,
  quotes_Reply = 4,
  layout_Reply = 5,
  strikes_Reply = 6,
  deals_Reply = 7
}

export function unionToReplyFromChart(
  type: ReplyFromChart,
  accessor: (obj:ActiveIndicatorsIdsReply|Reply|milky_deals_Reply|milky_layout_Reply|milky_quotes_Reply|milky_strikes_Reply|milky_version_Reply) => ActiveIndicatorsIdsReply|Reply|milky_deals_Reply|milky_layout_Reply|milky_quotes_Reply|milky_strikes_Reply|milky_version_Reply|null
): ActiveIndicatorsIdsReply|Reply|milky_deals_Reply|milky_layout_Reply|milky_quotes_Reply|milky_strikes_Reply|milky_version_Reply|null {
  switch(ReplyFromChart[type]) {
    case 'NONE': return null; 
    case 'common_Reply': return accessor(new Reply())! as Reply;
    case 'version_Reply': return accessor(new milky_version_Reply())! as milky_version_Reply;
    case 'indicator_ActiveIndicatorsIdsReply': return accessor(new ActiveIndicatorsIdsReply())! as ActiveIndicatorsIdsReply;
    case 'quotes_Reply': return accessor(new milky_quotes_Reply())! as milky_quotes_Reply;
    case 'layout_Reply': return accessor(new milky_layout_Reply())! as milky_layout_Reply;
    case 'strikes_Reply': return accessor(new milky_strikes_Reply())! as milky_strikes_Reply;
    case 'deals_Reply': return accessor(new milky_deals_Reply())! as milky_deals_Reply;
    default: return null;
  }
}

export function unionListToReplyFromChart(
  type: ReplyFromChart, 
  accessor: (index: number, obj:ActiveIndicatorsIdsReply|Reply|milky_deals_Reply|milky_layout_Reply|milky_quotes_Reply|milky_strikes_Reply|milky_version_Reply) => ActiveIndicatorsIdsReply|Reply|milky_deals_Reply|milky_layout_Reply|milky_quotes_Reply|milky_strikes_Reply|milky_version_Reply|null, 
  index: number
): ActiveIndicatorsIdsReply|Reply|milky_deals_Reply|milky_layout_Reply|milky_quotes_Reply|milky_strikes_Reply|milky_version_Reply|null {
  switch(ReplyFromChart[type]) {
    case 'NONE': return null; 
    case 'common_Reply': return accessor(index, new Reply())! as Reply;
    case 'version_Reply': return accessor(index, new milky_version_Reply())! as milky_version_Reply;
    case 'indicator_ActiveIndicatorsIdsReply': return accessor(index, new ActiveIndicatorsIdsReply())! as ActiveIndicatorsIdsReply;
    case 'quotes_Reply': return accessor(index, new milky_quotes_Reply())! as milky_quotes_Reply;
    case 'layout_Reply': return accessor(index, new milky_layout_Reply())! as milky_layout_Reply;
    case 'strikes_Reply': return accessor(index, new milky_strikes_Reply())! as milky_strikes_Reply;
    case 'deals_Reply': return accessor(index, new milky_deals_Reply())! as milky_deals_Reply;
    default: return null;
  }
}
