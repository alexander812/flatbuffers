// automatically generated by the FlatBuffers compiler, do not modify

import { AddAdviserMethod, AddAdviserMethodT } from '../../milky/adviser/add-adviser-method.js';
import { RemoveAdviserMethod, RemoveAdviserMethodT } from '../../milky/adviser/remove-adviser-method.js';
import { SetAdviserTimeframeLimitMethod, SetAdviserTimeframeLimitMethodT } from '../../milky/adviser/set-adviser-timeframe-limit-method.js';


export enum Methods {
  NONE = 0,
  AddAdviserMethod = 1,
  RemoveAdviserMethod = 2,
  SetAdviserTimeframeLimitMethod = 3
}

export function unionToMethods(
  type: Methods,
  accessor: (obj:AddAdviserMethod|RemoveAdviserMethod|SetAdviserTimeframeLimitMethod) => AddAdviserMethod|RemoveAdviserMethod|SetAdviserTimeframeLimitMethod|null
): AddAdviserMethod|RemoveAdviserMethod|SetAdviserTimeframeLimitMethod|null {
  switch(Methods[type]) {
    case 'NONE': return null; 
    case 'AddAdviserMethod': return accessor(new AddAdviserMethod())! as AddAdviserMethod;
    case 'RemoveAdviserMethod': return accessor(new RemoveAdviserMethod())! as RemoveAdviserMethod;
    case 'SetAdviserTimeframeLimitMethod': return accessor(new SetAdviserTimeframeLimitMethod())! as SetAdviserTimeframeLimitMethod;
    default: return null;
  }
}

export function unionListToMethods(
  type: Methods, 
  accessor: (index: number, obj:AddAdviserMethod|RemoveAdviserMethod|SetAdviserTimeframeLimitMethod) => AddAdviserMethod|RemoveAdviserMethod|SetAdviserTimeframeLimitMethod|null, 
  index: number
): AddAdviserMethod|RemoveAdviserMethod|SetAdviserTimeframeLimitMethod|null {
  switch(Methods[type]) {
    case 'NONE': return null; 
    case 'AddAdviserMethod': return accessor(index, new AddAdviserMethod())! as AddAdviserMethod;
    case 'RemoveAdviserMethod': return accessor(index, new RemoveAdviserMethod())! as RemoveAdviserMethod;
    case 'SetAdviserTimeframeLimitMethod': return accessor(index, new SetAdviserTimeframeLimitMethod())! as SetAdviserTimeframeLimitMethod;
    default: return null;
  }
}
