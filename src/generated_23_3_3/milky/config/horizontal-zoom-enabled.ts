// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class HorizontalZoomEnabled implements flatbuffers.IUnpackableObject<HorizontalZoomEnabledT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HorizontalZoomEnabled {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHorizontalZoomEnabled(bb:flatbuffers.ByteBuffer, obj?:HorizontalZoomEnabled):HorizontalZoomEnabled {
  return (obj || new HorizontalZoomEnabled()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHorizontalZoomEnabled(bb:flatbuffers.ByteBuffer, obj?:HorizontalZoomEnabled):HorizontalZoomEnabled {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HorizontalZoomEnabled()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

enable():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startHorizontalZoomEnabled(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addEnable(builder:flatbuffers.Builder, enable:boolean) {
  builder.addFieldInt8(0, +enable, +false);
}

static endHorizontalZoomEnabled(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHorizontalZoomEnabled(builder:flatbuffers.Builder, enable:boolean):flatbuffers.Offset {
  HorizontalZoomEnabled.startHorizontalZoomEnabled(builder);
  HorizontalZoomEnabled.addEnable(builder, enable);
  return HorizontalZoomEnabled.endHorizontalZoomEnabled(builder);
}

unpack(): HorizontalZoomEnabledT {
  return new HorizontalZoomEnabledT(
    this.enable()
  );
}


unpackTo(_o: HorizontalZoomEnabledT): void {
  _o.enable = this.enable();
}
}

export class HorizontalZoomEnabledT implements flatbuffers.IGeneratedObject {
constructor(
  public enable: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return HorizontalZoomEnabled.createHorizontalZoomEnabled(builder,
    this.enable
  );
}
}
