// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class RemoveAllAnimationsMethod implements flatbuffers.IUnpackableObject<RemoveAllAnimationsMethodT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RemoveAllAnimationsMethod {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRemoveAllAnimationsMethod(bb:flatbuffers.ByteBuffer, obj?:RemoveAllAnimationsMethod):RemoveAllAnimationsMethod {
  return (obj || new RemoveAllAnimationsMethod()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRemoveAllAnimationsMethod(bb:flatbuffers.ByteBuffer, obj?:RemoveAllAnimationsMethod):RemoveAllAnimationsMethod {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RemoveAllAnimationsMethod()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startRemoveAllAnimationsMethod(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endRemoveAllAnimationsMethod(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createRemoveAllAnimationsMethod(builder:flatbuffers.Builder):flatbuffers.Offset {
  RemoveAllAnimationsMethod.startRemoveAllAnimationsMethod(builder);
  return RemoveAllAnimationsMethod.endRemoveAllAnimationsMethod(builder);
}

unpack(): RemoveAllAnimationsMethodT {
  return new RemoveAllAnimationsMethodT();
}


unpackTo(_o: RemoveAllAnimationsMethodT): void {}
}

export class RemoveAllAnimationsMethodT implements flatbuffers.IGeneratedObject {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return RemoveAllAnimationsMethod.createRemoveAllAnimationsMethod(builder);
}
}
