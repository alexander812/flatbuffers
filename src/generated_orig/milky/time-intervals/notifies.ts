// automatically generated by the FlatBuffers compiler, do not modify

import { OnGetTimeInterval, OnGetTimeIntervalT } from '../../milky/time-intervals/on-get-time-interval.js';
import { OnRequestData, OnRequestDataT } from '../../milky/time-intervals/on-request-data.js';

export enum Notifies {
  NONE = 0,
  OnGetTimeInterval = 1,
  OnRequestData = 2,
}

export function unionToNotifies(
  type: Notifies,
  accessor: (obj: OnGetTimeInterval | OnRequestData) => OnGetTimeInterval | OnRequestData | null,
): OnGetTimeInterval | OnRequestData | null {
  switch (Notifies[type]) {
    case 'NONE':
      return null;
    case 'OnGetTimeInterval':
      return accessor(new OnGetTimeInterval())! as OnGetTimeInterval;
    case 'OnRequestData':
      return accessor(new OnRequestData())! as OnRequestData;
    default:
      return null;
  }
}

export function unionListToNotifies(
  type: Notifies,
  accessor: (index: number, obj: OnGetTimeInterval | OnRequestData) => OnGetTimeInterval | OnRequestData | null,
  index: number,
): OnGetTimeInterval | OnRequestData | null {
  switch (Notifies[type]) {
    case 'NONE':
      return null;
    case 'OnGetTimeInterval':
      return accessor(index, new OnGetTimeInterval())! as OnGetTimeInterval;
    case 'OnRequestData':
      return accessor(index, new OnRequestData())! as OnRequestData;
    default:
      return null;
  }
}
