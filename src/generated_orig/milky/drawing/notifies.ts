// automatically generated by the FlatBuffers compiler, do not modify

import { CreatedDrawingNotify, CreatedDrawingNotifyT } from '../../milky/drawing/created-drawing-notify.js';
import { EditedDrawingNotify, EditedDrawingNotifyT } from '../../milky/drawing/edited-drawing-notify.js';
import { SelectedDrawingNotify, SelectedDrawingNotifyT } from '../../milky/drawing/selected-drawing-notify.js';
import { UnselectedDrawingNotify, UnselectedDrawingNotifyT } from '../../milky/drawing/unselected-drawing-notify.js';

export enum Notifies {
  NONE = 0,
  EditedDrawingNotify = 1,
  SelectedDrawingNotify = 2,
  UnselectedDrawingNotify = 3,
  CreatedDrawingNotify = 4,
}

export function unionToNotifies(
  type: Notifies,
  accessor: (
    obj: CreatedDrawingNotify | EditedDrawingNotify | SelectedDrawingNotify | UnselectedDrawingNotify,
  ) => CreatedDrawingNotify | EditedDrawingNotify | SelectedDrawingNotify | UnselectedDrawingNotify | null,
): CreatedDrawingNotify | EditedDrawingNotify | SelectedDrawingNotify | UnselectedDrawingNotify | null {
  switch (Notifies[type]) {
    case 'NONE':
      return null;
    case 'EditedDrawingNotify':
      return accessor(new EditedDrawingNotify())! as EditedDrawingNotify;
    case 'SelectedDrawingNotify':
      return accessor(new SelectedDrawingNotify())! as SelectedDrawingNotify;
    case 'UnselectedDrawingNotify':
      return accessor(new UnselectedDrawingNotify())! as UnselectedDrawingNotify;
    case 'CreatedDrawingNotify':
      return accessor(new CreatedDrawingNotify())! as CreatedDrawingNotify;
    default:
      return null;
  }
}

export function unionListToNotifies(
  type: Notifies,
  accessor: (
    index: number,
    obj: CreatedDrawingNotify | EditedDrawingNotify | SelectedDrawingNotify | UnselectedDrawingNotify,
  ) => CreatedDrawingNotify | EditedDrawingNotify | SelectedDrawingNotify | UnselectedDrawingNotify | null,
  index: number,
): CreatedDrawingNotify | EditedDrawingNotify | SelectedDrawingNotify | UnselectedDrawingNotify | null {
  switch (Notifies[type]) {
    case 'NONE':
      return null;
    case 'EditedDrawingNotify':
      return accessor(index, new EditedDrawingNotify())! as EditedDrawingNotify;
    case 'SelectedDrawingNotify':
      return accessor(index, new SelectedDrawingNotify())! as SelectedDrawingNotify;
    case 'UnselectedDrawingNotify':
      return accessor(index, new UnselectedDrawingNotify())! as UnselectedDrawingNotify;
    case 'CreatedDrawingNotify':
      return accessor(index, new CreatedDrawingNotify())! as CreatedDrawingNotify;
    default:
      return null;
  }
}
