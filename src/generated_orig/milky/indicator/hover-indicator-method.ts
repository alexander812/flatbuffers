// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import type { IndicatorIdT } from '../../milky/model/indicator/indicator-id.js';
import { IndicatorId } from '../../milky/model/indicator/indicator-id.js';

export class HoverIndicatorMethod implements flatbuffers.IUnpackableObject<HoverIndicatorMethodT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): HoverIndicatorMethod {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsHoverIndicatorMethod(bb: flatbuffers.ByteBuffer, obj?: HoverIndicatorMethod): HoverIndicatorMethod {
    return (obj || new HoverIndicatorMethod()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsHoverIndicatorMethod(
    bb: flatbuffers.ByteBuffer,
    obj?: HoverIndicatorMethod,
  ): HoverIndicatorMethod {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new HoverIndicatorMethod()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  indicatorId(obj?: IndicatorId): IndicatorId | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? (obj || new IndicatorId()).__init(this.bb_pos + offset, this.bb!) : null;
  }

  static startHoverIndicatorMethod(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addIndicatorId(builder: flatbuffers.Builder, indicatorIdOffset: flatbuffers.Offset) {
    builder.addFieldStruct(0, indicatorIdOffset, 0);
  }

  static endHoverIndicatorMethod(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    builder.requiredField(offset, 4); // indicator_id
    return offset;
  }

  static createHoverIndicatorMethod(
    builder: flatbuffers.Builder,
    indicatorIdOffset: flatbuffers.Offset,
  ): flatbuffers.Offset {
    HoverIndicatorMethod.startHoverIndicatorMethod(builder);
    HoverIndicatorMethod.addIndicatorId(builder, indicatorIdOffset);
    return HoverIndicatorMethod.endHoverIndicatorMethod(builder);
  }

  unpack(): HoverIndicatorMethodT {
    return new HoverIndicatorMethodT(this.indicatorId() !== null ? this.indicatorId()!.unpack() : null);
  }

  unpackTo(_o: HoverIndicatorMethodT): void {
    _o.indicatorId = this.indicatorId() !== null ? this.indicatorId()!.unpack() : null;
  }
}

export class HoverIndicatorMethodT implements flatbuffers.IGeneratedObject {
  constructor(public indicatorId: IndicatorIdT | null = null) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    return HoverIndicatorMethod.createHoverIndicatorMethod(
      builder,
      this.indicatorId !== null ? this.indicatorId.pack(builder) : 0,
    );
  }
}
