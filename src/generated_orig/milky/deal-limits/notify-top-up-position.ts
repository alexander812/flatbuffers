// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class NotifyTopUpPosition implements flatbuffers.IUnpackableObject<NotifyTopUpPositionT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): NotifyTopUpPosition {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsNotifyTopUpPosition(bb: flatbuffers.ByteBuffer, obj?: NotifyTopUpPosition): NotifyTopUpPosition {
    return (obj || new NotifyTopUpPosition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsNotifyTopUpPosition(
    bb: flatbuffers.ByteBuffer,
    obj?: NotifyTopUpPosition,
  ): NotifyTopUpPosition {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new NotifyTopUpPosition()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  positionY(): number {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
  }

  static startNotifyTopUpPosition(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addPositionY(builder: flatbuffers.Builder, positionY: number) {
    builder.addFieldFloat32(0, positionY, 0.0);
  }

  static endNotifyTopUpPosition(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createNotifyTopUpPosition(builder: flatbuffers.Builder, positionY: number): flatbuffers.Offset {
    NotifyTopUpPosition.startNotifyTopUpPosition(builder);
    NotifyTopUpPosition.addPositionY(builder, positionY);
    return NotifyTopUpPosition.endNotifyTopUpPosition(builder);
  }

  unpack(): NotifyTopUpPositionT {
    return new NotifyTopUpPositionT(this.positionY());
  }

  unpackTo(_o: NotifyTopUpPositionT): void {
    _o.positionY = this.positionY();
  }
}

export class NotifyTopUpPositionT implements flatbuffers.IGeneratedObject {
  constructor(public positionY: number = 0.0) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    return NotifyTopUpPosition.createNotifyTopUpPosition(builder, this.positionY);
  }
}
