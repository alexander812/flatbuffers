// automatically generated by the FlatBuffers compiler, do not modify

import { AddDeals, AddDealsT } from '../../milky/deals/add-deals.js';
import { RemoveAllDeals, RemoveAllDealsT } from '../../milky/deals/remove-all-deals.js';
import { RemoveDeal, RemoveDealT } from '../../milky/deals/remove-deal.js';
import { SelectDeal, SelectDealT } from '../../milky/deals/select-deal.js';
import { UnselectDeal, UnselectDealT } from '../../milky/deals/unselect-deal.js';
import { UpdateDeals, UpdateDealsT } from '../../milky/deals/update-deals.js';

export enum Methods {
  NONE = 0,
  AddDeals = 1,
  UpdateDeals = 2,
  RemoveDeal = 3,
  RemoveAllDeals = 4,
  SelectDeal = 5,
  UnselectDeal = 6,
}

export function unionToMethods(
  type: Methods,
  accessor: (
    obj: AddDeals | RemoveAllDeals | RemoveDeal | SelectDeal | UnselectDeal | UpdateDeals,
  ) => AddDeals | RemoveAllDeals | RemoveDeal | SelectDeal | UnselectDeal | UpdateDeals | null,
): AddDeals | RemoveAllDeals | RemoveDeal | SelectDeal | UnselectDeal | UpdateDeals | null {
  switch (Methods[type]) {
    case 'NONE':
      return null;
    case 'AddDeals':
      return accessor(new AddDeals())! as AddDeals;
    case 'UpdateDeals':
      return accessor(new UpdateDeals())! as UpdateDeals;
    case 'RemoveDeal':
      return accessor(new RemoveDeal())! as RemoveDeal;
    case 'RemoveAllDeals':
      return accessor(new RemoveAllDeals())! as RemoveAllDeals;
    case 'SelectDeal':
      return accessor(new SelectDeal())! as SelectDeal;
    case 'UnselectDeal':
      return accessor(new UnselectDeal())! as UnselectDeal;
    default:
      return null;
  }
}

export function unionListToMethods(
  type: Methods,
  accessor: (
    index: number,
    obj: AddDeals | RemoveAllDeals | RemoveDeal | SelectDeal | UnselectDeal | UpdateDeals,
  ) => AddDeals | RemoveAllDeals | RemoveDeal | SelectDeal | UnselectDeal | UpdateDeals | null,
  index: number,
): AddDeals | RemoveAllDeals | RemoveDeal | SelectDeal | UnselectDeal | UpdateDeals | null {
  switch (Methods[type]) {
    case 'NONE':
      return null;
    case 'AddDeals':
      return accessor(index, new AddDeals())! as AddDeals;
    case 'UpdateDeals':
      return accessor(index, new UpdateDeals())! as UpdateDeals;
    case 'RemoveDeal':
      return accessor(index, new RemoveDeal())! as RemoveDeal;
    case 'RemoveAllDeals':
      return accessor(index, new RemoveAllDeals())! as RemoveAllDeals;
    case 'SelectDeal':
      return accessor(index, new SelectDeal())! as SelectDeal;
    case 'UnselectDeal':
      return accessor(index, new UnselectDeal())! as UnselectDeal;
    default:
      return null;
  }
}
