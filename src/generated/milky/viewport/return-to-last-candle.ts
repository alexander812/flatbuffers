// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class ReturnToLastCandle implements flatbuffers.IUnpackableObject<ReturnToLastCandleT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): ReturnToLastCandle {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsReturnToLastCandle(bb: flatbuffers.ByteBuffer, obj?: ReturnToLastCandle): ReturnToLastCandle {
    return (obj || new ReturnToLastCandle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsReturnToLastCandle(
    bb: flatbuffers.ByteBuffer,
    obj?: ReturnToLastCandle,
  ): ReturnToLastCandle {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new ReturnToLastCandle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static startReturnToLastCandle(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  static endReturnToLastCandle(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createReturnToLastCandle(builder: flatbuffers.Builder): flatbuffers.Offset {
    ReturnToLastCandle.startReturnToLastCandle(builder);
    return ReturnToLastCandle.endReturnToLastCandle(builder);
  }

  unpack(): ReturnToLastCandleT {
    return new ReturnToLastCandleT();
  }

  unpackTo(_o: ReturnToLastCandleT): void {}
}

export class ReturnToLastCandleT implements flatbuffers.IGeneratedObject {
  constructor() {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    return ReturnToLastCandle.createReturnToLastCandle(builder);
  }
}
