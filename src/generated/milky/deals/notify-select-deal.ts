// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import type { DealIdT } from '../../milky/model/deal/deal-id.js';
import { DealId } from '../../milky/model/deal/deal-id.js';

export class NotifySelectDeal implements flatbuffers.IUnpackableObject<NotifySelectDealT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): NotifySelectDeal {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsNotifySelectDeal(bb: flatbuffers.ByteBuffer, obj?: NotifySelectDeal): NotifySelectDeal {
    return (obj || new NotifySelectDeal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsNotifySelectDeal(bb: flatbuffers.ByteBuffer, obj?: NotifySelectDeal): NotifySelectDeal {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new NotifySelectDeal()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  id(obj?: DealId): DealId | null {
    const offset = this.bb!.__offset(this.bb_pos, 4);
    return offset ? (obj || new DealId()).__init(this.bb_pos + offset, this.bb!) : null;
  }

  static startNotifySelectDeal(builder: flatbuffers.Builder) {
    builder.startObject(1);
  }

  static addId(builder: flatbuffers.Builder, idOffset: flatbuffers.Offset) {
    builder.addFieldStruct(0, idOffset, 0);
  }

  static endNotifySelectDeal(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    builder.requiredField(offset, 4); // id
    return offset;
  }

  static createNotifySelectDeal(builder: flatbuffers.Builder, idOffset: flatbuffers.Offset): flatbuffers.Offset {
    NotifySelectDeal.startNotifySelectDeal(builder);
    NotifySelectDeal.addId(builder, idOffset);
    return NotifySelectDeal.endNotifySelectDeal(builder);
  }

  unpack(): NotifySelectDealT {
    return new NotifySelectDealT(this.id() !== null ? this.id()!.unpack() : null);
  }

  unpackTo(_o: NotifySelectDealT): void {
    _o.id = this.id() !== null ? this.id()!.unpack() : null;
  }
}

export class NotifySelectDealT implements flatbuffers.IGeneratedObject {
  constructor(public id: DealIdT | null = null) {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    return NotifySelectDeal.createNotifySelectDeal(builder, this.id !== null ? this.id.pack(builder) : 0);
  }
}
