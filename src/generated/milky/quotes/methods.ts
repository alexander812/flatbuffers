// automatically generated by the FlatBuffers compiler, do not modify

import { AddCandle, AddCandleT } from '../../milky/quotes/add-candle.js';
import { AddTick, AddTickT } from '../../milky/quotes/add-tick.js';
import { PushHistory, PushHistoryT } from '../../milky/quotes/push-history.js';
import { UpdateCandle, UpdateCandleT } from '../../milky/quotes/update-candle.js';

export enum Methods {
  NONE = 0,
  AddCandle = 1,
  UpdateCandle = 2,
  AddTick = 3,
  PushHistory = 4,
}

export function unionToMethods(
  type: Methods,
  accessor: (
    obj: AddCandle | AddTick | PushHistory | UpdateCandle,
  ) => AddCandle | AddTick | PushHistory | UpdateCandle | null,
): AddCandle | AddTick | PushHistory | UpdateCandle | null {
  switch (Methods[type]) {
    case 'NONE':
      return null;
    case 'AddCandle':
      return accessor(new AddCandle())! as AddCandle;
    case 'UpdateCandle':
      return accessor(new UpdateCandle())! as UpdateCandle;
    case 'AddTick':
      return accessor(new AddTick())! as AddTick;
    case 'PushHistory':
      return accessor(new PushHistory())! as PushHistory;
    default:
      return null;
  }
}

export function unionListToMethods(
  type: Methods,
  accessor: (
    index: number,
    obj: AddCandle | AddTick | PushHistory | UpdateCandle,
  ) => AddCandle | AddTick | PushHistory | UpdateCandle | null,
  index: number,
): AddCandle | AddTick | PushHistory | UpdateCandle | null {
  switch (Methods[type]) {
    case 'NONE':
      return null;
    case 'AddCandle':
      return accessor(index, new AddCandle())! as AddCandle;
    case 'UpdateCandle':
      return accessor(index, new UpdateCandle())! as UpdateCandle;
    case 'AddTick':
      return accessor(index, new AddTick())! as AddTick;
    case 'PushHistory':
      return accessor(index, new PushHistory())! as PushHistory;
    default:
      return null;
  }
}
