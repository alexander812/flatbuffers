// automatically generated by the FlatBuffers compiler, do not modify

import { InputFromChart, InputFromChartT } from '../milky/input-from-chart.js';
import { InputFromClient, InputFromClientT } from '../milky/input-from-client.js';
import { OutputFromChart, OutputFromChartT } from '../milky/output-from-chart.js';
import { OutputFromClient, OutputFromClientT } from '../milky/output-from-client.js';

export enum MessageType {
  NONE = 0,
  InputFromClient = 1,
  OutputFromChart = 2,
  InputFromChart = 3,
  OutputFromClient = 4,
}

export function unionToMessageType(
  type: MessageType,
  accessor: (
    obj: InputFromChart | InputFromClient | OutputFromChart | OutputFromClient,
  ) => InputFromChart | InputFromClient | OutputFromChart | OutputFromClient | null,
): InputFromChart | InputFromClient | OutputFromChart | OutputFromClient | null {
  switch (MessageType[type]) {
    case 'NONE':
      return null;
    case 'InputFromClient':
      return accessor(new InputFromClient())! as InputFromClient;
    case 'OutputFromChart':
      return accessor(new OutputFromChart())! as OutputFromChart;
    case 'InputFromChart':
      return accessor(new InputFromChart())! as InputFromChart;
    case 'OutputFromClient':
      return accessor(new OutputFromClient())! as OutputFromClient;
    default:
      return null;
  }
}

export function unionListToMessageType(
  type: MessageType,
  accessor: (
    index: number,
    obj: InputFromChart | InputFromClient | OutputFromChart | OutputFromClient,
  ) => InputFromChart | InputFromClient | OutputFromChart | OutputFromClient | null,
  index: number,
): InputFromChart | InputFromClient | OutputFromChart | OutputFromClient | null {
  switch (MessageType[type]) {
    case 'NONE':
      return null;
    case 'InputFromClient':
      return accessor(index, new InputFromClient())! as InputFromClient;
    case 'OutputFromChart':
      return accessor(index, new OutputFromChart())! as OutputFromChart;
    case 'InputFromChart':
      return accessor(index, new InputFromChart())! as InputFromChart;
    case 'OutputFromClient':
      return accessor(index, new OutputFromClient())! as OutputFromClient;
    default:
      return null;
  }
}
